<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.wso2.apim</groupId>
        <artifactId>org.wso2.apim.components</artifactId>
        <version>0.8</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>org.wso2.apim.distribution</artifactId>
    <version>0.8</version>
    <name>WSO2 APIM gRPC Telemetry Receiver Distribution</name>
    <packaging>pom</packaging>


    <dependencies>
        <dependency>
            <groupId>org.wso2.apim</groupId>
            <artifactId>grpc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.apim</groupId>
            <artifactId>org.wso2.apim.grpc.telemetry.receiver</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.apim</groupId>
            <artifactId>protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf-lite</artifactId>
        </dependency>
    </dependencies>

    <build>

        <plugins>
            <!-- Copy Maven dependencies into target/files/lib -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-osgi-libs</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/files/lib</outputDirectory>
                            <excludeArtifactIds>
                                grpc-protobuf, grpc-protobuf-lite, grpc-stub
                            </excludeArtifactIds>

                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-non-osgi-libs</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/files/non-osgi/</outputDirectory>
                            <excludeArtifactIds>
                                grpc, org.wso2.apim.grpc.telemetry.receiver, protobuf
                            </excludeArtifactIds>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate OSGI bundles from Non-OSGi jars and save in OSGi Jars directory -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeProjectDependencies>true</includeProjectDependencies>
                    <includePluginDependencies>true</includePluginDependencies>
                    <mainClass>org.wso2.carbon.tools.CarbonToolExecutor</mainClass>
                    <arguments>
                        <argument>${project.build.directory}/files/non-osgi/</argument>
                        <argument>${project.build.directory}/files/lib/</argument>
                        <argument>${project.build.directory}</argument>
                    </arguments>
                    <systemProperties>
                        <systemProperty>
                            <key>wso2.carbon.tool</key>
                            <value>jar-to-bundle-converter</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.wso2.carbon</groupId>
                        <artifactId>org.wso2.carbon.tools.core</artifactId>
                        <version>5.2.8</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Copy jars to install directory -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/../../../install/analytics/lib/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/files/lib/</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
