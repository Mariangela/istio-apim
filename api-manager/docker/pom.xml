<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.wso2.apim</groupId>
        <artifactId>org.wso2.apim.custom.executor.components</artifactId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>apim-docker</artifactId>
    <name>WSO2 API Manager Docker</name>
    <description>Dockerfile for WSO2 API Manager</description>
    <packaging>pom</packaging>


    <dependencies>
        <dependency>
            <groupId>org.wso2.apim</groupId>
            <artifactId>kubernetes-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wso2.apim</groupId>
            <artifactId>custom-executor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wso2.apim</groupId>
            <artifactId>logging-interceptor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wso2.apim</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wso2.orbit.com.squareup.okio</groupId>
            <artifactId>okio</artifactId>
        </dependency>
    </dependencies>

    <build>

        <plugins>

            <!-- Copy Maven dependencies into target/files/lib -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-osgi-libs</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/files/lib</outputDirectory>
                            <excludeArtifactIds>
                                custom-executor
                            </excludeArtifactIds>

                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-non-osgi-libs</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/files/non-osgi/</outputDirectory>
                            <excludeArtifactIds>
                                kubernetes-client, logging-interceptor, okhttp, okio
                            </excludeArtifactIds>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-lib-files</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>

                        <configuration>
                            <outputDirectory>./../../install/api-manager/resources/lib/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/files/non-osgi/</directory>
                                    <includes>
                                        <include>*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dropins-files</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>

                        <configuration>
                            <outputDirectory>./../../install/api-manager/resources/dropins/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/files/lib/</directory>
                                    <includes>
                                        <include>*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Build Docker Image -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>docker-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <repository>${docker.repo.name}/wso2am</repository>
                            <tag>${docker.image.tag}</tag>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>